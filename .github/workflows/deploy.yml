name: Tech Challenge - Production Manager - Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install Dependencies
        run: yarn --force --frozen-lockfile

      - name: Copy settings file
        run: cp ./src/config/settings.template ./src/config/settings.json

      - name: Setup envsubst
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext-base

      - name: Substitute environment variables in .env
        run: |
          envsubst < .env.template > .env
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PWD: ${{ secrets.DB_PWD }}
          RMQ_HOST: ${{ secrets.RMQ_HOST }}
          RMQ_USER: ${{ secrets.RMQ_USER }}
          RMQ_PWD: ${{ secrets.RMQ_PWD }}

      - name: Build project
        run: yarn build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPOSITORY }}:latest

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_REPOSITORY }}:latest

      - name: Update kubectl configuration file
        run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Update app on Kubernetes
        run: kubectl apply -f kubernetes/
